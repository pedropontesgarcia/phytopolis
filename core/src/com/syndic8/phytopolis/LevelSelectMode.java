package com.syndic8.phytopolis;

import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.syndic8.phytopolis.assets.AssetDirectory;
import com.syndic8.phytopolis.util.ScreenListener;

public class LevelSelectMode implements Screen {
    /**
     * Whether or not this screen is active
     */
    private boolean active;
    /**
     * Reference to GameCanvas created by the root
     */
    private GameCanvas canvas;
    /**
     * Listener that will update the player mode when we are done
     */
    private ScreenListener listener;
    private TextureRegion background;


    public LevelSelectMode(){
    }

    public void gatherAssets(AssetDirectory directory){
        background = new TextureRegion(directory.getEntry("gameplay:background",
                Texture.class));
    }

    public void setCanvas(GameCanvas canvas) {
        this.canvas = canvas;
    }
    @Override
    public void show() {
        active = true;
    }

    @Override
    public void render(float delta) {
        if (active) {
            update(delta);
            draw();

            if (listener != null
            //&& isReady()
                ) {
                listener.exitScreen(this, 0);
            }
        }
    }

    public void update(float delta){
        float mouseX = InputController.getInstance().getMouseX();
        float mouseY = InputController.getInstance().getMouseY();
        //TODO Check if player clicked on a pot, listener.exitScreen if did
    }

    public void draw(){
        canvas.begin();
        canvas.draw(background,
                Color.WHITE,
                0,
                0,
                canvas.getWidth(),
                canvas.getHeight());
        canvas.end();
    }

    public void setScreenListener(ScreenListener listener) {
        this.listener = listener;
    }

    @Override
    public void resize(int i, int i1) {
        //Autogenerated, can ignore
    }

    @Override
    public void pause() {
        //Autogenerated, can ignore
    }

    @Override
    public void resume() {
        //Autogenerated, can ignore
    }

    @Override
    public void hide() {
        active = false;
    }

    @Override
    public void dispose() {

    }
}
